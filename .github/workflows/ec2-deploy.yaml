name: Deploy App to EC2

on:
  push:
    branches:
      - main
# env:
#     TARGET: home
#     EC2_USER: ubuntu

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Sonar Scanner
        run: npm install -g sonarqube-scanner

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=edwendy_deploy-webapp-ec2 \
            -Dsonar.organization=edwendy \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    environment: prod
    needs: sonar
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy Files to EC2
        uses: easingthemes/ssh-deploy@v5.0.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ vars.EC2_USER }}
          TARGET: ${{ vars.TARGET_DIR }}

  configure:
    name: Configure Infrastructure
    runs-on: ubuntu-latest
    environment: prod
    needs: deploy
    
    steps:
      - name: Configure Apache Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get -y update
            sudo apt-get install -y apache2
            sudo systemctl daemon-reload
            sudo systemctl start apache2
            sudo systemctl enable apache2
            # Remove existing contents
            sudo rm -rf /var/www/html/*
            # Copy files to web root
            sudo cp ${{ vars.TARGET_DIR }}/src/index.html /var/www/html/
            sudo cp -r ${{ vars.TARGET_DIR }}/assets /var/www/html/
            # Set permissions
            sudo chown -R www-data:www-data /var/www/html
            sudo chmod -R 755 /var/www/html

  verify:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: configure
    
    steps:
      - name: Health Check
        run: |
          sleep 30
          curl -f http://${{ secrets.HOST_DNS }} || exit 1
          echo "Deployment successful!"